// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_DATABASE_URL")
}

model Promo {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  entries   Entry[]
  draws     Draw[]
}

model Entry {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  promoId   String
  promo     Promo    @relation(fields: [promoId], references: [id])
  winners   Winner[]
  
  @@unique([promoId, name])
}

model Draw {
  id           String    @id @default(uuid())
  promoId      String
  promo        Promo     @relation(fields: [promoId], references: [id])
  numRounds    Int
  shuffleCount Int
  usingQuantum Boolean   @default(true)
  createdAt    DateTime  @default(now())
  winners      Winner[]
}

model Winner {
  id        String   @id @default(uuid())
  drawId    String
  draw      Draw     @relation(fields: [drawId], references: [id])
  entryId   String
  entry     Entry    @relation(fields: [entryId], references: [id])
  rank      Int      @default(1)
  createdAt DateTime @default(now())
}
